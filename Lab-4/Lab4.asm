;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Cum Mar 11 2016
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
NOTALAR DW 1090,1090,1090,1374,917,1090,1374,917,1090,728,728,728,687,917,1155,1374,917,1090,545,1090,1090,545,577,612,648,728,687,0,1029,771,817,865,917,971,917,0,1374,1155,1374,1090
SURELER DW 04H,04H,04H,03H,01H,04H,03H,01H,08H,04H,04H,04H,03H,01H,04H,03H,01H,08H,04H,03H,01H,04H,03H,01H,01H,01H,02H,02H,02H,04H,03H,01H,01H,01H,02H,02H,02H,04H,03H,01H
NOTASAYISI DW 28H
DATA    ENDS

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
START PROC FAR
        MOV AX, DATA
	MOV DS, AX
	
	MOV AL, 00110110B ;kontrol yazmacına CNTR0, 16 bit, kip 3 ve binary sayma olacaginin bilgilerini aktariyoruz
	OUT 0AFH, AL
	
	XOR BX,BX
	XOR SI,SI
	XOR CX,CX
	MOV CX,NOTASAYISI ; cx bizim dongu sayimiz olacak kaç adet notanin oldugunu aktariyoruz
	
NOTAYAZDIR: 	XOR AX,AX
		MOV AX,NOTALAR[SI] 
		OUT 0A9H,AX
		MOV AL,AH
		OUT 0A9H,AL ;notalar icin gerekli olan sayma degerlerini CNTR0'a gonderdik
		XOR DX,DX
		MOV DX,SURELER[BX] ;bir notanin kac birim surede calacagi bilgisini DX'e atadik

SURE:		AND DX,0FFH
		JZ DEVAM
		CALL DELAY ;DX=0 olana kadar ayni nota calmaya devam ediyor
		DEC DX
		JMP SURE
	
DEVAM:		ADD BX,2 ;bir notaya ait olan birim zaman bitince diger notaya gecmek icin indis degerlerimizi arttiriyoruz
		ADD SI,2
		LOOP NOTAYAZDIR ;tum notalar bitesiye kadar devam ediyoruz
	

ENDLESS:
	 JMP ENDLESS
START	ENDP

DELAY	PROC NEAR ;notalarin calma suresi icin delay fonksiyonu
	PUSH CX
	MOV CX, 2FFFH
LOOP_DELAY: LOOP LOOP_DELAY
	POP CX
	RET
DELAY 	ENDP

CODE    ENDS
        END START